function [TrainedModel, Loss] = GetLDAModels(MnistTrain, MnistTest, labelsFilter, seed)
    switch nargin 
        case 2
            labelsFilter = 0:9; 
            rng(1); 
        case 3
            rng(1); 
        case 4
            rng(seed); 
    end
    [DataTrain, LabelsTrain, Projector, ~] = MnistTrain.principalProj(0.5); 
    TestaData = Projector*MnistTest.DataStd;
    TestLabels = MnistTest.Labels;

    Model = fitcdiscr(DataTrain.', LabelsTrain.', "DiscrimType", "Quadratic");
    PredictedLabels = predict(Model, TestaData.');
    CVModel = crossval(Model);
    L = kfoldLoss(CVModel);
    disp(strcat("10 digits cross val loss: ", num2str(L)));

    figure;
    confusionchart(TestLabels, PredictedLabels, 'RowSummary','row-normalized','ColumnSummary','column-normalized');
    title("LDA Confusion Matx Quadratic");


end